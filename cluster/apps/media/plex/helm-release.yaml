---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app plex
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: node-feature-discovery
      namespace: kube-tools
    - name: nvidia-device-plugin
      namespace: kube-tools
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controller:
      type: statefulset
    image:
      repository: ghcr.io/onedr0p/plex
      tag: 1.29.2.6364-6d72b0cf6@sha256:3457eeeba1c1c698470aa20d23db37c38969581ff86b111c2f31625886dbc948
    env:
      TZ: "${TIMEZONE}"
      ADVERTISE_IP: "http://${SVC_PLEX_ADDR}:32400/"
      ALLOWED_NETWORKS: "10.0.0.0/8,172.16.0.0/16,192.168.0.0/16"
    service:
      main:
        type: LoadBalancer
        annotations:
          metallb.universe.tf/loadBalancerIPs: "${SVC_PLEX_ADDR}"
        externalIPs: ["${SVC_PLEX_ADDR}"]
        externalTrafficPolicy: Local
        ports:
          http:
            port: 32400
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          external-dns.home.arpa/enabled: "true"
            # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: "plex-tls"
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 44
        - 109
        - 100
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 5Gi
        storageClass: ceph-block
        labels:
          snapshot.home.arpa/enabled: "true"
    persistence:
      media:
        enabled: true
        type: nfs
        server: "${SECRET_NFS_ADDR}"
        path: /mnt/8tb
        mountPath: /media
        readOnly: true
      transcode:
        enabled: true
        type: emptyDir
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: feature.node.kubernetes.io/custom-nvidia-gpu
                  operator: In
                  values:
                    - "true"
    runtimeClass: nvidia
    resources:
      requests:
        nvidia.com/gpu: 1 # requesting 1 GPU
        cpu: 100m
        memory: 128Mi
      limits:
        nvidia.com/gpu: 1 # requesting 1 GPU
        memory: 512Mi
