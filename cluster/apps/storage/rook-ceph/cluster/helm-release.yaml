---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 15m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.10.10
      sourceRef:
        kind: HelmRepository
        name: rook-ceph
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
  values:
    monitoring:
      enabled: true
      createPrometheusRules: true
    ingress:
      dashboard:
        ingressClassName: "nginx"
        host:
          name: &host "rook.${SECRET_DOMAIN}"
          path: /
        tls:
          - hosts:
              - *host
    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true
    cephClusterSpec:
      healthCheck:
        livenessProbe:
          mon:
            probe:
              initialDelaySeconds: 30
              periodSeconds: 30
              timeoutSeconds: 10
          mgr:
            probe:
              initialDelaySeconds: 30
              periodSeconds: 30
              timeoutSeconds: 10
          osd:
            probe:
              initialDelaySeconds: 30
              periodSeconds: 30
              timeoutSeconds: 10
        startupProbe:
          mon:
            probe:
              initialDelaySeconds: 15
              periodSeconds: 30
              timeoutSeconds: 10
          mgr:
            probe:
              initialDelaySeconds: 15
              periodSeconds: 30
              timeoutSeconds: 10
          osd:
            probe:
              initialDelaySeconds: 15
              periodSeconds: 30
              timeoutSeconds: 10
      resources:
        mgr:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 256Mi
        mon:
          limits:
            cpu: 1000m
            memory: 1280Mi
          requests:
            cpu: 100m
            memory: 256Mi
        osd:
          limits:
            cpu: 500m
            memory: 1536Mi
          requests:
            cpu: 250m
            memory: 256Mi
        prepareosd:
          limits:
            cpu: 1000m
            memory: 400Mi
          requests:
            cpu: 100m
            memory: 200Mi
        mgr-sidecar:
          limits:
            cpu: 256m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 40Mi
        crashcollector:
          limits:
            cpu: 100m
            memory: 220M
          requests:
            cpu: 15m
            memory: 64M
        logcollector:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "100m"
            memory: "100Mi"
        cleanup:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "100m"
            memory: "100Mi"
      network:
        provider: host
      crashCollector:
        disable: false
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: "k3s-0"
            devices:
              - name: "/dev/sdb"
          - name: "k3s-1"
            # resources:
            #   requests:
            #     cpu: 10m
            #     memory: 128Mi
            #   limits:
            #     cpu: 200m
            #     memory: 256Mi
            devices:
              - name: "/dev/sdb"
          - name: "k3s-2"
            devices:
              - name: "/dev/sdb"
          - name: "k3s-3"
            devices:
              - name: "/dev/sdb"
    # cephBlockPoolsVolumeSnapshotClass:
    #   enabled: true
    #   name: csi-rbdplugin-snapclass
    #   annotations:
    #     velero.io/csi-volumesnapshot-class: "true"
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 2
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephFileSystems:
      - name: ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 2
          dataPools:
            - failureDomain: host
              replicated:
                size: 2
              name: data0
          metadataServer:
            activeCount: 1
            activeStandby: true
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                cpu: 200m
                memory: 512Mi
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          pool: data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephObjectStores:
      - name: ceph-objectstore
        spec:
          metadataPool:
            failureDomain: host
            replicated:
              size: 2
          dataPool:
            failureDomain: host
            erasureCoded:
              dataChunks: 2
              codingChunks: 1
          preservePoolsOnDelete: true
          gateway:
            port: 80
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                cpu: 200m
                memory: 512Mi
            instances: 1
          healthCheck:
            bucket:
              interval: 60s
        storageClass:
          enabled: true
          name: ceph-bucket
          reclaimPolicy: Delete
          parameters:
            region: eu-north-1
